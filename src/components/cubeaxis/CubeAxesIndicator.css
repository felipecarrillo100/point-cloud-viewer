.cube-container {
    perspective: 800px;
    position: relative;
    margin: auto;
}

.cube {
    position: relative;
    width: 100%;
    height: 100%;
    transform-style: preserve-3d;
    transform-origin: center;
}

.face {
    position: absolute;
    width: 100%;
    height: 100%;
    background: rgba(163, 163, 163, 0.95);
    border: 2px solid white;
    display: flex;
    justify-content: center;
    align-items: center;
    backface-visibility: hidden;
}

/* Cube faces */
.front  { transform: translateZ(var(--half, 100px)); }
.back   { transform: rotateY(180deg) translateZ(var(--half, 100px)); }
.right  { transform: rotateY(90deg) translateZ(var(--half, 100px)); }
.left   { transform: rotateY(-90deg) translateZ(var(--half, 100px)); }
.top    { transform: rotateX(90deg) translateZ(var(--half, 100px)); }
.bottom { transform: rotateX(-90deg) translateZ(var(--half, 100px)); }

/* Axis wrapper */
.axis-wrapper {
    position: absolute;
    top: 50%;
    left: 50%;
    transform-style: preserve-3d;
    transform-origin: 0 50%;
}

/* Main axis cuboid using --axis-scale */
.axis,
.axis.second {
    width: var(--axis-scale); /* full axis length from TSX */
    height: 2px;
    transform-origin: 0 50%;
    background-color: currentColor;
}

/* Second perpendicular ribbon for 3D beam */
.axis.second {
    transform: rotateX(90deg);
}

/* Arrowheads for both ribbons */
.axis::after,
.axis.second::after {
    content: '';
    position: absolute;
    right: 0;
    top: 50%;
    transform: translateY(-50%);
    width: 8px;
    height: 0;
    border-left: 8px solid currentColor;
    border-top: 4px solid transparent;
    border-bottom: 4px solid transparent;
}

/* Cube half size */
:root {
    --half: 100px;
}
